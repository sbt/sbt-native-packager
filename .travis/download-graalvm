#!/bin/bash
# Make GraalVM `native-image` available and nothing else
function setup_os_specific_envs() {
	case $(uname | tr '[:upper:]' '[:lower:]') in
		linux*)
			OS_NAME=linux
			BIN_PATH=bin
			;;
		darwin*)
			OS_NAME=darwin
			BIN_PATH=Contents/Home/bin/
			;;
		*)
			echo "Unsupported OS"
			exit
	esac
}

setup_os_specific_envs
GRAALVM_VERSION=19.0.0
GRAALVM_PARENT_DIRECTORY=${HOME}/.local/share
GRAALVM_DISTRIBUTION=graalvm-ce
GRAAL_DIRECTORY=${GRAALVM_PARENT_DIRECTORY}/${GRAALVM_DISTRIBUTION}-${GRAALVM_VERSION}
TAR_GZ_FILENAME=${GRAALVM_DISTRIBUTION}-${OS_NAME}-amd64-${GRAALVM_VERSION}.tar.gz
TAR_GZ_URL=https://github.com/oracle/graal/releases/download/vm-${GRAALVM_VERSION}/${TAR_GZ_FILENAME}
NATIVE_IMAGE=${GRAAL_DIRECTORY}/${BIN_PATH}/native-image
NATIVE_IMAGE_TARGET_DIRECTORY=${HOME}/.local/bin
NATIVE_IMAGE_TARGET=${NATIVE_IMAGE_TARGET_DIRECTORY}/native-image
if [[ ! -f ${NATIVE_IMAGE} ]]
then
	(mkdir -p ${GRAALVM_PARENT_DIRECTORY} &&
		cd ${GRAALVM_PARENT_DIRECTORY} &&
		wget -O ${TAR_GZ_FILENAME} ${TAR_GZ_URL} &&
		tar zxf ${TAR_GZ_FILENAME} &&
		${GRAAL_DIRECTORY}/${BIN_PATH}/gu install native-image &&
		rm -f ${TAR_GZ_FILENAME})
fi
ls -lsa ${NATIVE_IMAGE}
mkdir -p ${NATIVE_IMAGE_TARGET_DIRECTORY}
ln -f -s ${NATIVE_IMAGE} ${NATIVE_IMAGE_TARGET}
export PATH=${NATIVE_IMAGE_TARGET_DIRECTORY}:${PATH}
